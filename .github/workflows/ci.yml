name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: develop-my_custom_app-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      redis-cache:
        image: redis:alpine
        ports:
          - 13000:6379
      redis-queue:
        image: redis:alpine
        ports:
          - 11000:6379
      mariadb:
        image: mariadb:10.6
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true

      - name: Install Redis
        run: sudo apt-get update && sudo apt-get install -y redis-server

      - name: Install MariaDB Client
        run: sudo apt-get install mariadb-client-10.6

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py', '**/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Yarn
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Frappe Bench
        run: |
          pip install frappe-bench
          bench init --skip-redis-config-generation --skip-assets --python "$(which python)" frappe-bench
          cd frappe-bench
          bench get-app frappe --branch ${{ secrets.CI_FRAPPE_VERSION }}
          bench get-app erpnext --branch ${{ secrets.CI_ERPNEXT_VERSION }}
          bench get-app my_custom_app $GITHUB_WORKSPACE
          bench new-site ${{ secrets.CI_FRAPPE_SITE_NAME }} \
            --admin-password ${{ secrets.CI_ADMIN_PASSWORD }} \
            --mariadb-root-password ${{ secrets.CI_MYSQL_ROOT_PASSWORD }}
          bench --site ${{ secrets.CI_FRAPPE_SITE_NAME }} install-app erpnext
          bench --site ${{ secrets.CI_FRAPPE_SITE_NAME }} install-app my_custom_app
        working-directory: ${{ github.workspace }}

      - name: Run Tests
        run: |
          cd frappe-bench
          bench --site ${{ secrets.CI_FRAPPE_SITE_NAME }} set-config allow_tests true
          bench --site ${{ secrets.CI
